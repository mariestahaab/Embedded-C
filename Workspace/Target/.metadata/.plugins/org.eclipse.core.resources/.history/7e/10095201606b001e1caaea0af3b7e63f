/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2023 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>

int main(void)
{
	uint32_t *pClkCtrlReg 	= (uint32_t*) 0x40023830;
	uint32_t *pPortAModeReg = (uint32_t*) 0x40020000;
	uint32_t *pPortAOutReg 	= (uint32_t*) 0x40020014;

	//Step-2:
	// To enable Clock for GPIO A in the AHB1ENR, set bit-0 to 1.
    *pClkCtrlReg |= (0x1 << 0);

    // Step-3:
    // Set bits 11 and 10 (for pin 5) to 0 and 1 respectively for General Purpose Output Mode.

    // 1. CLEAR bits 11 and 10 in the register:
    *pPortAModeReg &= ~(0x11 << 10);

    // 2. Set bits 11, 10 to 0, 1:
    *pPortAModeReg |= (0x01 << 10);

    // Step-4:

/*    while(1){
    	uint32_t maxCount = 300000;

    	// Set bit-5 to 1 to turn ON LED.
    	*pPortAOutReg |= (0x1 << 5);

    	// Add delay:
    	for(uint32_t count = 0; count <= maxCount; count++);

    	// Clear bit-5 to turn OFF LED.
    	*pPortAOutReg &= ~(0x1 << 5);

    	// Add delay:
    	for(uint32_t count = 0; count <= maxCount; count++);
    }*/

    // OR:

    while(1){
    	uint32_t maxCount = 300000;

    	// EXOR bit-5 to TOGGLE LED.
    	*pPortAOutReg ^= (0x1 << 5);

    	// Add delay:
    	for(uint32_t count = 0; count <= maxCount; count++);

    }

}

