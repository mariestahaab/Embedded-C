/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2023 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

/*
 * TASK: Read user input from user Push Button (B1) to turn ON / OFF the on-board LED (LD2).
 *
 * STEP-1: Read User Input.
 * 	-Button B1 is connected to PC13.
 * 	-B1 produces a value of 0 WHEN PRESSED and 1 WHEN RELEASED.
 * 	-Base address of the GPIO C register is 0x4002 0800.
 *
 * 	-GPIO C is on the AHB1 Bus.
 * 	-To enable the clock for GPIO C:
 * 		-Base Address for the RCC register is 0x4002 3800.
 * 		-Address Offset for RCC_AHB1ENR - 0x30.
 * 		-Set bit-2 of the RCC_AHB1ENR register to 1.
 * 	-To set the mode for PC13 as INPUT:
 * 		-Address Offset for GPIOx_MODER - 0x00.
 * 		-Set bits 27, 26 (MODER13) to 0,0.
 * 	-To READ the value from PC13:
 * 		-Address Offset for GPIOx_IDR - 0x10.
 * 		-Read value of bit-13.
 *
 * 	STEP-2: Produce Output.
 * 	-Green LED LD2 connected to PA5.
 *	-Base address of GPIO A is 0x4002 0000.
 *
 *	-Port A is on the AHB1 Bus.
 *	-To enable the clock for GPIO A:
 *		-Base Address for the RCC register is 0x4002 3800.
 *		-Address Offset for RCC_AHB1ENR - 0x30.
 * 		-Set bit-0 of the RCC_AHB1ENR register to 1.
 * 	-To set the mode for PA5 as OUTPUT:
 *		-Address Offset for GPIOx_MODER: 0x00.
 *		-Set bits 11, 10 (MODER5) to 0, 1.
 *	-To WRITE the data to PA5:
 *		-Address Offset for GPIOx_ODR - 0x14.
 *		-SET/CLEAR bit-5 to turn ON/OFF LD2.
 */

#include <stdint.h>

int main(void)
{
	uint32_t *pClkCtrlReg 	= (uint32_t*) 0x40023830;

	uint32_t *pPortCModeReg = (uint32_t*) 0x40020800;
	uint32_t *pPortCInReg 	= (uint32_t*) 0x40020810;

	uint32_t *pPortAModeReg = (uint32_t*) 0x40020000;
	uint32_t *pPortAOutReg 	= (uint32_t*) 0x40020014;

	// To enable Clock for GPIO A and GPIO C in the AHB1ENR, set bits 2, 0 to 1, 1.
    *pClkCtrlReg |= (0x1 << 2 | 0x1 << 0);

    // Set bits 27, 26 (MODER13) to 0, 0 respectively for Input Mode.
    *pPortCModeReg &= ~(0x1 << 27 | 0x1 << 26);

    // Set bits 11 and 10 (for pin 5) to 0 and 1 respectively for General Purpose Output Mode.

    // 1. CLEAR bits 11 and 10 in the register:
    *pPortAModeReg &= ~(0x1 << 11 | 0x1 << 10);

    // 2. Set bits 11, 10 to 0, 1:
    *pPortAModeReg |= (0x01 << 10);

    while(1){

    	uint32_t buttonRead = ~(*pPortCInReg >> 13);

    	if(buttonRead & 0x1){
    		// Set bit-5 to 1 to turn ON LED.
    		*pPortAOutReg |= (0x1 << 5);
    	}
    	else{
    		// Clear bit-5 to turn OFF LED.
    		*pPortAOutReg &= ~(0x1 << 5);
    	}
    }
}

